Docker cheat-sheet

 apt install docker.io

 groupadd docker

 gpasswd -a $USER docker

 service docker restart

docker run image
docker start name|id
docker stop kill name|id
docker rm name|id

docker run [OPTIONS] IMAGE [COMMAND] [ARG...]

docker ps       — Lists running containers. Some useful flags include: -a / -all for all containers (default shows just running) and —-quiet /-q to list just their ids (useful for when you want to get all the containers).
docker pull     — Most of your images will be created on top of a base image from the Docker Hub registry. Docker Hub contains many pre-built images that you can pull and try without needing to define and configure your own. To download a particular image, or set of images (i.e., a repository), use docker pull.
docker build    — The docker build command builds Docker images from a Dockerfile and a “context”. A build’s context is the set of files located in the specified PATH or URL. Use the -t flag to label the image, for example docker build -t my_container . with the . at the end signalling to build using the currently directory.
docker run      — Run a docker container based on an image, you can follow this on with other commands, such as -it bash to then run bash from within the container. docker run my_image -it bash
docker logs     — Use this command to display the logs of a container, you must specify a container and can use flags, such as --follow to follow the output in the logs of using the program. docker logs --follow my_container
docker volume ls — This lists the volumes, which are the preferred mechanism for persisting data generated by and used by Docker containers.
docker rm       — Removes one or more containers. docker rm my_container
docker rmi      — Removes one or more images. docker rmi my_image
docker stop     — Stops one or more containers. docker stop my_container stops one container, while docker stop $(docker ps -a -q) stops all running containers. A more direct way is to use docker kill my_container, which does not attempt to shut down the process gracefully first.
Use them together, for example to clean up all your docker images and containers:
kill all running containers with docker kill $(docker ps -q)
delete all stopped containers with docker rm $(docker ps -a -q)
delete all images with docker rmi $(docker images -q)

from: https://medium.com/@ryanwhocodes

links:

https://docs.docker.com